/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：企业中心 - 关爱体检通
 2. 页面名称：Controller (每个页面的类都继承于这个控制器基类)
 3. 作者：赵华刚(zhaohuagang@guanaihui.com)
 4. 备注：对api的依赖：jQuery
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function Controller() {    
    this.environment = "production" ;  //环境定义，可以是：test | production；分别表示测试环境和生产环境
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    一些关于静态资源地址的配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.staticDomain = "//cdn01.360guanai.com" ;
    this.utilStaticPrefix = this.staticDomain + "/guanaihui/js/util" ;
    this.appStaticPrefix = this.staticDomain + "/apps/enterprise.360guanai.com/js" ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    一些关于cookie参数的配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.cookieDomain = ".360guanai.com" ;  //整个app用来设置和取得cookie的域名
    this.cookieKeyPrefix = "EC_" ;  //cookie的key值前缀，用来区分哪个模块的cookie，比如EC_表示enterprise center(企业中心)
    this.cookieKeyConf = {
        //一些关于cookie参数名称的配置
        "userName" : this.cookieKeyPrefix + "userName" ,
        "userId" : this.cookieKeyPrefix + "userId" ,
        "companyName" : this.cookieKeyPrefix + "companyName" ,
        "orderAmount" : this.cookieKeyPrefix + "orderAmount" ,
        "contact" : this.cookieKeyPrefix + "contact" ,
        "tel" : this.cookieKeyPrefix + "tel" ,
        "address" : this.cookieKeyPrefix + "address" ,
        "description" : this.cookieKeyPrefix + "description"
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    一些关于dialog | tips | confirm 参数的配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.tipsDialogId = "guanaihui-tips" ;  //整个应用通用的tips框的id值
    this.confirmDialogId = "guanaihui-confirm" ;  //整个应用通用的confirm框的id值
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    整个应用Ajax请求的时候的数据类型，是json还是jsonp
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.apiDataType = (this.environment === "test") ? "jsonp" :  "json" ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    几个接口的地址
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/    
    this.apiPrefix = (this.environment === "test") ? "//test.360guanai.com/EnterpriseCenter" : "/EnterpriseCenter" ;  //api接口地址前缀
    this.loginApiUrl = this.apiPrefix + "/EnterpriseUserLogin" ;  //登录接口地址
    this.logoutApiUrl = this.apiPrefix + "/EnterpriseUserLogout" ;  //退出接口地址
    this.orderListApiUrl = this.apiPrefix + "/GetOrderList" ;  //获取订单列表接口地址
    this.orderDetailApiUrl = this.apiPrefix + "/GetOrderDetail" ;  //获取订单详情接口地址
    this.resetPasswordApiUrl = this.apiPrefix + "/ResetPassword" ;  //修改密码接口地址
    this.updateProfileApiUrl = this.apiPrefix + "/UpdateEnterpriseUserInfo" ;  //更新企业信息接口地址    
    this.lastOrderChartApiUrl = this.apiPrefix + "/GetEnterpriseReport" ;  //图表数据接口地址
    this.cardUseStatusApiUrl = this.apiPrefix + "/GetCardsByOrderId" ;  //订单明细中卡使用状态接口地址
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    页面地址后缀
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.pageSuffix = (this.environment === "test") ? ".html" : "" ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    登录以后跳转的地址
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.welcomeUrl = "console" + this.pageSuffix ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    登出以后跳转的地址
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.logoutRedirectUrl = "login" + this.pageSuffix ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    顶部文件包含地址
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.toperPageUrl = "toper" + this.pageSuffix ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    侧边栏文件包含地址
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.lSidePageUrl = "lSide" + this.pageSuffix ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
   CDN域名序列随机化
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.randomDomainSn = function() {
        var sn = parseInt(Math.random()*20+1, 10).toString() ;
        if(sn.length < 2) sn = "0" + sn ;
        return sn ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    新增模态框的公共方法，是下面的this.dialog和this.tips两个方法的基础方法
    1. 使用方法：
        this.createModalDialog({
            "type" : "dialog" ,  //模态框类型，值为：dialog | tips
            "id" : "my-modal-dialog" ,  //模态框ID值，type为dialog，新增的模态框id为参数给出的id，否则id就是"ttpaicrm-tips"
            "tabindex" : 1  //模态框的tabindex值
        }) ;
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.createModalDialog = function(params) {
        var type = (params === null || params.type === null || params.type === undefined) ? "dialog" : params.type ;        
        var id =  params.id ;
        if (type === "tips") id = this.tipsDialogId ; 
        else if (type === "confirm") id = this.confirmDialogId ;
        var tabindex =  (params === null || params.tabindex === null || params.tabindex === undefined) ? null : params.tabindex ; 
        var modal = $(document.createElement("DIV")).attr("id", id).attr("role", "dialog").attr("aria-labelledby", "myModalLabel").addClass("modal fade") ;
        if(tabindex) $(modal).attr("tabindex", tabindex) ;
        var modalDialog = $(document.createElement("DIV")).attr("role", "document").addClass("modal-dialog").append($(document.createElement("DIV")).addClass("modal-content")) ;
        $(modal).append(modalDialog) ;
        $("body").prepend(modal) ;        
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    弹出普通的内容为某个url的html结构的模态框，始终都是先干掉先前如果存在的同样ID的模态框再新增
    备注：这个方法只能打开同域名下的页面
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.dialog = function(params) {        
        var tabindex = (params === null || params.tabindex === null || params.tabindex === undefined) ? null : params.tabindex ;         
        if($("#" + params.id).size() > 0) $("#" + params.id).remove() ;
        this.createModalDialog({ 
            "type" : "dialog" ,
            "id" : params.id ,
            "tabindex" : tabindex
        }) ;
        $("#" + params.id).modal({
            remote : params.url
        }) ;  
        $.fn.modal.Constructor.prototype.enforceFocus = function() {};
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    弹出tips提示框，参数：
    @content：提示的html信息
    @time：表示多少秒之后关闭，如果为0表示不关闭，单位为秒
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.tips = function(content, time, callback) {
        var classSelf = this ;
        if($("#" + this.tipsDialogId).size() > 0) {
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            如果提示框html结构已经存在，就改变内容再显示
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $("#" + this.tipsDialogId + " .modal-tips").html(content) ;            
            $("#" + this.tipsDialogId).modal("show") ;
        }
        else {
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            如果先前页面都没有提示过就先创建模态框
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            this.createModalDialog({ "type" : "tips" }) ;
            $("#" + this.tipsDialogId).addClass("bs-example-modal-sm") ;
            $("#" + this.tipsDialogId + " .modal-dialog").addClass("modal-sm") ;
            $("#" + this.tipsDialogId + " .modal-content").append($(document.createElement("DIV")).addClass("modal-tips").html(content)) ;
            $("#" + this.tipsDialogId).modal({ "keyboard" : true }) ;
        }       
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        最后根据需要决定是否关闭
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        if(time) {
            window.setTimeout(function(){
                $("#" + classSelf.tipsDialogId).modal("hide") ;
                if(callback) callback() ;
            }, time * 1000) ;
        }
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    确认框
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.confirm = function(params) {
        var classSelf = this ;
        var title = (params === null || params.title === null || params.title === undefined) ? "系统确认" : params.title ;
        var content = (params === null || params.content === null || params.content === undefined) ? "" : params.content ;
        var confirmLabel = (params === null || params.confirmLabel === null || params.confirmLabel === undefined) ? "确认" : params.confirmLabel ;
        var cancelLabel = (params === null || params.cancelLabel === null || params.cancelLabel === undefined) ? "取消" : params.cancelLabel ;
        var confirmInterface = (params === null || params.confirmInterface === null || params.confirmInterface === undefined) ? null : params.confirmInterface ;
        var cancelInterface = (params === null || params.cancelInterface === null || params.cancelInterface === undefined) ? null : params.cancelInterface ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        如果先前有这个dialog就删除
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        if($("#" + this.confirmDialogId).size() > 0) $("#" + this.confirmDialogId).remove() ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        先创建一个dialog
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.createModalDialog({ "type" : "confirm" }) ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        再将节点贴进去
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $("#" + this.confirmDialogId + " .modal-content").append($(document.createElement("DIV")).addClass("modal-header").append("<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\">" + title + "</h4>"))  ;
        $("#" + this.confirmDialogId + " .modal-content").append($(document.createElement("DIV")).addClass("modal-confirm").html(content)) ;
        var confirmFooter = $(document.createElement("DIV")).addClass("modal-footer") ;
        var confirmBtn = $(document.createElement("BUTTON")).attr("type", "button").addClass("btn btn-primary").text(confirmLabel) ;
        $(confirmBtn).click(function(){
            if(confirmInterface) confirmInterface() ;
            $("#" + classSelf.confirmDialogId).modal("hide") ;
        }) ;
        $(confirmFooter).append(confirmBtn) ;
        var cancelBtn = $(document.createElement("BUTTON")).attr("type", "button").addClass("btn btn-default").attr("data-dismiss", "modal").text(cancelLabel) ;
        $(cancelBtn).click(function(){
            if(cancelInterface) cancelInterface() ;
        }) ;
        $(confirmFooter).append(cancelBtn) ;
        $("#" + this.confirmDialogId + " .modal-content").append(confirmFooter) ;        
        $("#" + this.confirmDialogId).modal({ "keyboard" : true }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    如果有需要条理化的表格(就是有选择句柄用来单选全选行的表格)，就使用插件来处理表格
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.methodizeTable = function() {
        if($(".table-methodize").size() === 0) return ;
        require([this.utilStaticPrefix + "/jquery.methodizetable.min.js"], function() {
            $(".table-methodize").methodizetable() ;
        }) ;
    } ;    
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    发送Ajax请求的方法
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.request =function(apiUrl, data, params) {
        var classSelf = this ;
        var type = (params === null || params.type === null || params.type === undefined) ? "GET" : params.type ;
        var process = (params === null || params.process === null || params.process === undefined) ? null : params.process ;
        //var jsonp = (params === null || params.jsonp === null || params.jsonp === undefined) ? null : params.jsonp ;
        var apiDataType = (params === null || params.apiDataType === null || params.apiDataType === undefined) ? this.apiDataType : params.apiDataType ; 
        var onExceptionInterface = (params === null || params.onExceptionInterface === null || params.onExceptionInterface === undefined) ? null : params.onExceptionInterface ; 
        this.tips("正在加载数据，请稍等...") ;
        try {
            $.ajax({
                url : apiUrl ,
                type : type ,
                data : data ,
                dataType : apiDataType ,                
                error : function(e) {
                    classSelf.tips("调用数据接口失败！请测试您的数据接口！", 3) ;
                } ,
                success : function(data) {
                    $("#" + classSelf.tipsDialogId).modal("hide") ;
                    if(data.code.toString() === "301") classSelf.clearCookieRedirect() ;
                    else if(data.code.toString() === "200") {
                        if(process) process(data) ;  //一切没有问题，就处理数据
                    }
                    else {
                        classSelf.tips(data.message, 3) ;
                        if(onExceptionInterface) onExceptionInterface(data.code, data.message) ;                        
                    }                    
                }
            });
        }
        catch (e) {
            classSelf.tips("错误名称：" + e.name + "\n错误描述：" + e.message, 3) ;           
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        整个try-catch块结束
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    加载公共页面
    @name : 当前模块名称，用来绑定当前模块到左边侧栏
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.loadPortals = function(name) {
        if($("#toper").size() ===0 || $("#lSide").size() === 0) return ;
        var classSelf = this ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        加载lSide
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $("#lSide").load(this.lSidePageUrl, function() {            
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            显示订单数量
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/            
            $("#lSide .order-amount").text($.cookie(classSelf.cookieKeyConf.orderAmount)) ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            绑定当前子菜单
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            classSelf.bindLocationToLSide(name) ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            订单搜索条时间绑定
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            classSelf.addListenerToSearcher() ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            子菜单的切换显示隐藏
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            classSelf.switchBranch() ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            接下来加载toper
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $("#toper").load(classSelf.toperPageUrl, function() {                
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                显示公司名称
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                $("#toper .company-name").text($.cookie(classSelf.cookieKeyConf.companyName)) ;
                $("#toper .order-amount").text($.cookie(classSelf.cookieKeyConf.orderAmount)) ;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                页面主体部分高度调整
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                classSelf.adjustBodyHeight() ;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                页面resize的时候需要重新调整pageBody的高度
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                classSelf.resizePageBodyHeight() ;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                左侧栏导航菜单的切换显示隐藏
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                classSelf.switchLSide() ;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                初始化tooltip
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                $('[data-toggle="tooltip"]').tooltip() ;
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                退出系统处理
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                classSelf.logout() ;
            }) ;
        })
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    页面主体部分高度调整
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.adjustBodyHeight = function() {
        if($("#pageBody").size() === 0) return ;
        $("#pageBody").height($(window).height() - 50) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    页面resize的时候需要重新调整pageBody的高度
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.resizePageBodyHeight = function() {
        if($("#pageBody").size() === 0) return ;
        var classSelf = this ;
        $(window).resize(function(){
            classSelf.adjustBodyHeight() ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    左侧栏导航菜单的切换显示隐藏
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.switchLSide = function() {
        if($("#lSide").size() === 0 || $("#lSideSwitcher").size() === 0) return ;
        var nLSideWidth = $("#lSide").width() ;
        if(nLSideWidth > 0) $("#lSideSwitcher").addClass("on") ;
        else $("#lSideSwitcher").removeClass("on") ;
        $("#lSideSwitcher").click(function(){
            var nNewWidth = $(this).hasClass("on") ? 0 : "220px" ;            
            $("#lSide").animate({
                "width" : nNewWidth
            }, 200) ;
            $("#dataPanel").animate({
                "margin-left" : nNewWidth
            }, 200) ;
            $(this).toggleClass("on") ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    订单搜索条时间绑定
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.addListenerToSearcher = function() {
        if($("#lSide .searcher").size() === 0) return ;
        var $input = $("#lSide .searcher input[name='keywords']") ;
        $input.focus(function(){
            $("#lSide .searcher").css({"background-color" : "#fff"}) ;
            $(this).css({"color" : "#444"}) ;
        }).blur(function(){
            $("#lSide .searcher").css({"background-color" : "#2e343c"}) ;
            $(this).css({"color" : "#ccc"}) ;
        }) ;        
        $("#lSide .searcher .clear-keywords").click(function(){
            $input.val("") ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    子菜单的切换显示隐藏
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.switchBranch = function() {
        if($("#lSide").size() === 0) return ;
        $("#lSide dl dt").click(function(){            
            $(this).siblings("dd").toggle("normal") ;
            $(this).find(".switcher").toggleClass("icon-xiangxia2").toggleClass("icon-xiangshang3") ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    绑定当前子菜单
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.bindLocationToLSide = function(name) {        
        $("#lSide dl dd ul li a").each(function(){
            var dataName = $(this).attr("data-name") ;
            if(dataName !== "undefined" && dataName === name) $(this).addClass("on") ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    tabs切换
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.switchTabs = function() {
        require([this.utilStaticPrefix + "/jquery.tabs.min.js"], function() {
            $(".tabs").tabs({
                effect : "slideDown" ,
                duration : 500
            }) ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    退出系统
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.logout = function() {
        if($("#logoutBtn").size() === 0) return ;
        var classSelf = this ;
        $("#logoutBtn").click(function(){
            classSelf.request(classSelf.logoutApiUrl, { "accountid" : $.cookie(classSelf.cookieKeyConf.userName) }, {                
                process : classSelf.clearCookieRedirect()
            }) ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    清除cookie跳出去
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.clearCookieRedirect = function() {
        for(key in this.cookieKeyConf) {
            if(this.cookieKeyConf.hasOwnProperty(key)) $.cookie(this.cookieKeyConf[key], null, { path : "/", domain : this.cookieDomain }) ;
        }
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        跳转到登录页面
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        window.location.href = this.logoutRedirectUrl ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    页面加载的时候执行的公共逻辑
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.onload = function() {        
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        条理化表格处理
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.methodizeTable() ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        tabs切换
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        this.switchTabs() ;
    } ;    
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    整个基类逻辑结束
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/    
    this.onload() ;    
} ;
