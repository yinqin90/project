/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 插件名称：pullload
2. 插件描述：拖动加载数据
3. 版本：1.0
4. 原理：判断滚动条的位置是否达到指定目标的在页面中的位置的X或者Y值临界值，以此为依据来触发Ajax请求
5. 使用范例：  
    
6. 未尽事宜：
7. 作者：zhaohuagang@guanaihui.com
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

(function($) {
    $.fn.pullload = function(options) {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        合并配置属性
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var opts = $.extend({}, $.fn.pullload.defaults, options);
        var morehcsShowed = false;

        return this.each(function() {
            var self = this;
            $(window).scroll(function() {
                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                取得页面滚动条位置
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                var height = $(window).height();
                var scrollTop = $(window).scrollTop();

                //取得容器内最后一个元素的位移
                var $lastEl = $(self).find(opts.childElementSelector).last();
                var offset = $lastEl.height() + $lastEl.offset().top + opts.threshold;

                /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                满足条件就请求
                -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                if (height + scrollTop > offset) {
                    if (!morehcsShowed) {
                        $.fn.pullload.request(self, opts);
                        morehcsShowed = true;
                    } else {
                        morehcsShowed = false;
                    }
                };
            });
        });
    };

    $.fn.pullload.request = function(container, opts) {

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        明确化几个参数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var apiDataType = opts.crossDomain ? "jsonp" : "json";
        var requestType = opts.crossDomain ? "GET" : opts.requestType;

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        设置请求数据
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var requestData = {};
        var pageIndex;

        if ($(container).attr(opts.reuqestDataAttr) != undefined && $(container).attr(opts.reuqestDataAttr) != '') {
            requestData = $.parseJSON($(container).attr(opts.reuqestDataAttr));
        }

        if ($(container).attr(opts.loadedPageCountAttr) == undefined) {
            pageIndex = 2;
            $(container).attr(opts.loadedPageCountAttr, pageIndex);
        } else {
            pageIndex = $(container).attr(opts.loadedPageCountAttr);
        }

        requestData[opts.requestPageKey] = pageIndex;

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        一旦请求开始，状态条就要开启
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $.fn.pullload.tips(opts.loadingTips, container, opts);

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        整个请求过程用try-catch块包起来
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        try {
            $.ajax({
                url: opts.apiUrl,
                type: requestType,
                dataType: apiDataType,
                data: requestData,
                success: function(data) {
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    先执行回调函数
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    if (opts.callBack) {
                        opts.callBack(data);
                    };

                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    然后给容器的opts.loadedPageCountAttr这个属性值+1
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    var loadedPageCount = ($(container).attr(opts.loadedPageCountAttr) == "" || $(container).attr(opts.loadedPageCountAttr) == undefined) ? 0 : parseInt($(container).attr(opts.loadedPageCountAttr), 10);
                    $(container).attr(opts.loadedPageCountAttr, loadedPageCount + 1);

                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    再判断数据是否加载完毕，如果加载完毕还要off掉window的事件
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    if (data[opts.countKey]) {
                        if (data[opts.countKey] === $(container).find(opts.childElementSelector).size()) {
                            $.fn.pullload.tips(opts.lastLoadedTips, container, opts);
                            
                            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            off事件处理
                            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                            $(window).off('scroll');
                        };
                    } else {
                        //去掉tips显示
                        $.fn.pullload.closeTips(container, opts);
                    }
                },
                error: function(e) {
                    $.fn.pullload.tips(opts.loadFailedTips, container, opts);
                }
            })

        } catch (e) {
            $.fn.pullload.tips("错误名称：" + e.name + "\n错误描述：" + e.message);
        }

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        整个try-catch块结束
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    }

    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    显示状态提示信息，如果提示框还没创建就先创建
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.pullload.tips = function(text, container, opts) {
        var $loadDom = $(container).next("." + opts.tipsClassName);

        if ($loadDom.size() === 0) {
            $(container).after("<div id='dataLoadStatus' class=\"" + opts.tipsClassName + "\"></div>");
            $(container).next("." + opts.tipsClassName).html(text);
            $(container).fadeIn(100);
        } else {
            if ($loadDom.html() !== text) {
                $loadDom.html(text);
            }
            $loadDom.fadeIn(100);
        }
    }


    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    显示状态提示信息
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.pullload.closeTips = function(container, opts) {
        $(container).next("." + opts.tipsClassName).fadeOut(100);
    }

    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    pullload默认配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

    $.fn.pullload.defaults = {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        拉动对象，默认是window，也可以是其他容器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        handler: window,

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        拉动方向，值可以是：up | down | left | right
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        direction: "up",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        提供数据进行异步加载的Ajax数据接口API地址
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        apiUrl: "",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接口是否跨域，这直接决定了接口的返回格式是json还是jsonp
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        crossDoman: false,

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求类型，可以是：GET | POST，如果crossDomain="jsonp"，那请求肯定是GET类型
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        requestType: "GET",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接收到数据后的进行dom绘制的回调函数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        callBack: null,

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        已经加载成功多少次，这个计数器存放在容器的属性中，这里指明用什么属性
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        loadedPageCountAttr: 'data-loadedPageCount',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        向后端 请求的时候，页码参数key
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        requestPageKey: 'loadedPageCount',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接口返回的总共多少条记录在json返回串中的key，这个key应该在返回串第一级key中
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        countKey: 'count',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        数据加载提示容器的class
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        tipsClassName: 'portal',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        数据加载中提示html内容，dom会贴到整个容器后面
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        loadingTips: "数据加载中...",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        数据加载到最后一条提示html内容
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        lastLoadedTips: "已经加载到最后一页！",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        数据加载失败提示html内容
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        loadFailedTips: "数据加载失败，请重试！",

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        选取容器下Item元素的选择器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        childElementSelector: '',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        将每次请求的数据放在容器的属性中，指明这边用什么属性
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        reuqestDataAttr: 'data-requestData',

        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        滚动到容器底部元素后，继续往下滚动的距离达到一定距离后，才触发请求后端
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        threshold: 100
    };
})(jQuery);